############
# Project variables
############
node-image: &node-image
  docker:
    - image: node:14.1.0-alpine3.10
  environment:
    NODE_ENV: production

# repo-level
bridge-web: &bridge-web
  <<: [*node-image]
  working_directory: ~/bridge-web

# project-level
api: &api
  <<: [*node-image]
  working_directory: ~/bridge-web/api

web: &web
  <<: [*node-image]
  working_directory: ~/bridge-web/web

only-valid-environments: &only-valid-environments
  filters:
    branches:
      only:
        # TODO: temporary
        - add-deploy
        - test
        - master

############
# Job Step Variables
############
# Build docker image and deploy to image repo
build-steps: &build-deploy
  steps:
    - checkout:
        path: ~/bridge-web
    - run:
        # Print info for reference in CircleCi job dashboard
        name: Versions / Current Branch / Current Directory / Node Environment
        command: |
          node --version
          npm --version
          echo "Branch: ${CIRCLE_BRANCH}"
          pwd & ls -l
          echo "NODE_ENV=$NODE_ENV"
    - restore_cache:
        key: build-dep-cache-{{ checksum "../api/package-lock.json" }}-{{ checksum "../web/package-lock.json" }}
    - run:
        name: Install NPM / Install Packages at project level / Install Docker
        command: |
          npm install -g npm@6.14.4
          npm install --loglevel error --production=false
          echo "Installed packages in: `pwd`"
          # Cache docker image builds (TODO: uncomment when/if paying for CircleCi plan)
    # - setup_remote_docker:
        # docker_layer_caching: true
        # version: 19.03.12
    - run:
        name: Install Docker
        command: apk update && apk add docker
    - save_cache:
        key: build-dep-cache-{{ checksum "../api/package-lock.json" }}-{{ checksum "../web/package-lock.json" }}
        paths:
          - ../api/node_modules
          - ../web/node_modules
    - run:
        name: Run postgres migrations if applicable
        command: |
          # --if-present will exit on web without exit code
          NODE_ENV=production VARIABLE_ENV=${CIRCLE_BRANCH} npm run migrate.production --if-present
    - run:
        name: Build and push Docker Image
        command: |
          PROJECT_NAME=`echo "${PWD##*/}"`
          echo "Building $PROJECT_NAME image fir ${CIRCLE_BRANCH}"
          docker build -t ebonsignori/bridge-$PROJECT_NAME:$CIRCLE_BRANCH:$CIRCLE_SHA1	i .
          docker push ebonsignori/bridge-$PROJECT_NAME:$CIRCLE_BRANCH:$CIRCLE_SHA1
 
lint-projects: &run-lint-projects
  steps:
    - checkout:
        path: ~/bridge-web
    - run:
        name: Versions / Current Branch / Current Directory / Node Environment
        command: |
          node --version
          npm --version
          echo "Branch: ${CIRCLE_BRANCH}"
          pwd & ls -l
          echo "NODE_ENV=$NODE_ENV"
    - restore_cache:
        key: lint-dep-cache-{{ checksum "./api/package-lock.json" }}-{{ checksum "./web/package-lock.json" }}-{{ checksum "./tasks/package-lock.json" }}
    - run:
        name: Install NPM and Jake
        command: |
          npm install -g npm@6.14.4
          npm install -g jake@8.0.19
          cd ./api
          npm install --loglevel error --production=false
          echo "Installed packages in: `pwd`"
          cd ../web
          npm install --loglevel error --production=false
          echo "Installed packages in: `pwd`"
          cd ../tasks
          npm install --loglevel error --production=false
          echo "Installed packages in: `pwd`"
          cd ..
    - save_cache:
        key: lint-dep-cache-{{ checksum "./api/package-lock.json" }}-{{ checksum "./web/package-lock.json" }}-{{ checksum "./tasks/package-lock.json" }}
        paths:
          - ./api/node_modules
          - ./web/node_modules
          - ./tasks/node_modules
    - run:
        name: Running es lint for each project
        command: npm run lint.projects

############
# Jobs
############
version: 2.1
jobs:
  lint-projects:
    <<: [*bridge-web, *run-lint-projects]
  api-build-deploy:
    <<: [*api, *build-deploy]
  web-build-deploy:
    <<: [*web, *build-deploy]

############
# Workflows
############
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - api-build-deploy:
          <<: *only-valid-environments
      - web-build-deploy:
          <<: *only-valid-environments
  test-and-lint:
    jobs:
      - lint-projects

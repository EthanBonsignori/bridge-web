version: '3'

services:
  api:
    image: node:13
    volumes:
      - ./node_modules
      - .:/usr/src/service
    working_dir: /usr/src/service
    ports:
        - ${API_PORT}:${API_PORT}
    expose:
        - ${API_PORT}
    links:
      - postgres_db:${PG_DOCKER_HOST}
      - postgres_test_db:${TEST_PG_DOCKER_HOST}
      - redis_db:${REDIS_DOCKER_HOST}
      - mongo_db:${MONGO_DOCKER_HOST}
    command: npm run dev

  postgres_db:
      image: 'postgres:12.2'
      restart: on-failure
      volumes: 
        - './local-data/postgres_test:/var/lib/postgresql/data'
      ports:
        - ${PG_PORT}:${PG_DOCKER_PORT}
      expose:
        - ${PG_PORT}
      environment:
        POSTGRES_USER: ${PG_USER}
        POSTGRES_PASSWORD: ${PG_PASSWORD}
        POSTGRES_DB: ${PG_DB_NAME}

  postgres_test_db:
    image: 'postgres:12.2'
    restart: on-failure
    volumes: 
      - './local-data/postgres:/var/lib/postgresql/data'
    ports:
      - ${TEST_PG_PORT}:${PG_DOCKER_PORT}
    expose:
      - ${TEST_PG_PORT}
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${TEST_PG_DB_NAME}

  redis_db:
    image: 'redis:5.0.8'
    restart: on-failure
    volumes: 
      - './local-data/redis:/data'
    ports:
      - "${REDIS_PORT}:${REDIS_DOCKER_PORT}"
    expose:
      - ${REDIS_PORT}

  mongo_db:
    image: mongo:4.0.18-xenial
    restart: on-failure
    volumes: 
      - './local-data/mongo:/data/db'
    ports:
      - "${MONGO_PORT}:${MONGO_DOCKER_PORT}"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    restart: always
    volumes:
      - ./test-data/cassandra_data:/var/lib/cassandra
